---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
---
<BaseLayout title="Willkommen | Stamm Phoenix" description="DPSG Stamm Phoenix Feldkirchen-Westerham – Pfadfinden vor Ort.">
  <svelte:fragment slot="header"><Header /></svelte:fragment>

  <!-- Hero -->
  <section class="overflow-visible rounded-lg bg-gradient-phoenix p-6 md:p-10 shadow-lift text-white">
    <div class="z-10 max-w-3xl">
      <h1 class="text-3xl md:text-5xl font-serif font-extrabold leading-tight">Gemeinschaft. Abenteuer. Verantwortung.</h1>
      <p class="mt-4 text-base md:text-lg text-white/90">
        Willkommen beim DPSG Stamm Phoenix Feldkirchen-Westerham. Bei uns entdecken Kinder und Jugendliche ihre Stärken – im Team, in der Natur und in Projekten.
      </p>
      <div class="mt-6 flex flex-wrap gap-3">
        <a href="/mitmachen" class="inline-flex items-center rounded-md bg-white px-4 py-2 text-sm font-semibold text-brand-800 shadow hover:shadow-md">
          Jetzt mitmachen
        </a>
        <a href="/gruppenstunden" class="inline-flex items-center rounded-md bg-white/10 px-4 py-2 text-sm font-semibold text-white ring-1 ring-inset ring-white/40 hover:bg-white/15">
          Gruppenstunden
        </a>
      </div>
    </div>
    <div class="pointer-events-none absolute -right-24 -top-24 size-64 rounded-full bg-white/10 blur-3xl"></div>
  </section>

  <!-- Quick info -->
  <section class="mt-10 grid gap-6 md:grid-cols-3">
    <div class="card">
      <h3 class="text-lg font-semibold">Für alle Altersstufen</h3>
      <p class="mt-2 text-sm text-neutral-700">Vom Wölfling bis Rover – altersgerechte Gruppen und Programme.</p>
    </div>
    <div class="card">
      <h3 class="text-lg font-semibold">Draußen erleben</h3>
      <p class="mt-2 text-sm text-neutral-700">Zeltlager, Hikes und Projekte fördern Selbstständigkeit und Teamgeist.</p>
    </div>
    <div class="card">
      <h3 class="text-lg font-semibold">Werte leben</h3>
      <p class="mt-2 text-sm text-neutral-700">Respekt, Verantwortung und Mitbestimmung sind Grundlagen unseres Handelns.</p>
    </div>
  </section>

  <svelte:fragment slot="footer"><Footer /></svelte:fragment>
</BaseLayout>

<script>
  import { login, logout, handleCallback, getAuth0Client, callProtectedEndpoint } from '../../utils/client-auth';

  interface Auth0Profile {
    name: string;
    picture: string;
  }

  interface DOMElements {
    loginButton: HTMLElement;
    logoutButton: HTMLElement;
    profileElement: HTMLElement;
    testButton: HTMLElement;
  }

  async function updateUI(): Promise<void> {
    const auth0Client = await getAuth0Client();
    const isAuthenticated = await auth0Client.isAuthenticated();
    const userProfile = await auth0Client.getUser<Auth0Profile>();

    const elements: DOMElements = {
      loginButton: document.getElementById("login") as HTMLElement,
      logoutButton: document.getElementById("logout") as HTMLElement,
      profileElement: document.getElementById("profile") as HTMLElement,
      testButton: document.getElementById("test-function") as HTMLElement
    };

    if (isAuthenticated && userProfile) {
      elements.loginButton.style.display = "none";
      elements.logoutButton.style.display = "block";
      elements.profileElement.style.display = "block";
      elements.profileElement.innerHTML = `
        <p>${userProfile.name}</p>
        <img src="${userProfile.picture}" alt="Profile" />
      `;
    } else {
      elements.loginButton.style.display = "block";
      elements.logoutButton.style.display = "none";
      elements.profileElement.style.display = "none";
    }
  }

  function attachEventListeners(): void {
    document.getElementById('login')?.addEventListener('click', login);
    document.getElementById('logout')?.addEventListener('click', logout);

    document.getElementById('test-function')?.addEventListener('click', async () => {
      try {
        const result = await callProtectedEndpoint('/.netlify/functions/auth-gated-function');
        console.log('Function response:', result);
        alert(JSON.stringify(result, null, 2));
      } catch (error: unknown) {
        if (error instanceof Error) {
          console.error('Error details:', error);
          alert(`Error calling function: ${error.message}`);
        } else {
          console.error('Unknown error:', error);
          alert('An unknown error occurred');
        }
      }
    });
  }

  if (location.search.includes("code=") && location.search.includes("state=")) {
    await handleCallback();
    attachEventListeners();
    await updateUI();
  } else {
    attachEventListeners();
    await updateUI();
  }
</script>
