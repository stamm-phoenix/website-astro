---
export const prerender = true;
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.id.replace('.md', '') },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props;
const { Content } = await post.render();
---
<BaseLayout title={post.data.title} description={post.data.description || undefined}>
  <svelte:fragment slot="header"><Header /></svelte:fragment>

  <article class="prose">
    <h1>{post.data.title}</h1>
    {(post.data.date || post.data.author) && (
      <p class="text-sm text-[var(--color-neutral-700)]">{post.data.date} {post.data.author ? `â€” ${post.data.author}` : ''}</p>
    )}
    <div class="mt-6">
      <Content />
    </div>
  </article>

  <svelte:fragment slot="footer"><Footer /></svelte:fragment>
</BaseLayout>