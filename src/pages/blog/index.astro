---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import type { MarkdownInstance } from 'astro';

type Frontmatter = {
  title: string;
  description?: string;
  date?: string;
  author?: string;
  cover?: string;
};

const posts = Object.entries(
  import.meta.glob<MarkdownInstance<Frontmatter>>('/src/content/blog/*.md', { eager: true })
)
  .map(([path, mod]) => ({ path, mod }))
  .sort((a, b) => (new Date(b.mod.frontmatter.date || '').getTime() - new Date(a.mod.frontmatter.date || '').getTime()));
---
<BaseLayout title="Blog | Stamm Phoenix" description="Neuigkeiten und Berichte aus dem Stamm.">
  <svelte:fragment slot="header"><Header /></svelte:fragment>

  <section class="prose">
    <h1>Blog</h1>
    <p>Neuigkeiten, Berichte und Einblicke.</p>
  </section>

  <ul class="mt-6 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
    {posts.map(({ path, mod }) => {
      const slug = path.split('/').pop()?.replace('.md', '') || '';
      return (
        <li class="group rounded-[var(--radius-lg)] border border-[var(--color-neutral-200)] bg-white p-5 shadow-[var(--shadow-soft)] hover:shadow-md transition">
          <a href={`/blog/${slug}`} class="no-underline">
            <div class="flex flex-col gap-2">
              <h3 class="text-lg font-semibold text-[var(--color-neutral-900)] group-hover:underline">
                {mod.frontmatter.title}
              </h3>
              <div class="text-sm text-[var(--color-neutral-700)]">
                {mod.frontmatter.date} {mod.frontmatter.author ? `â€” ${mod.frontmatter.author}` : ''}
              </div>
              {mod.frontmatter.description && (
                <p class="text-sm text-[var(--color-neutral-700)]">{mod.frontmatter.description}</p>
              )}
            </div>
          </a>
        </li>
      );
    })}
  </ul>

  <svelte:fragment slot="footer"><Footer /></svelte:fragment>
</BaseLayout>